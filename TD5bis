import tkinter as tk
from tkinter import ttk
import random

class TargetPracticeApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Target Practice")
        self.root.geometry("400x460")

        self.canvas = tk.Canvas(root, width=400, height=400, bg='ivory')
        self.canvas.grid(row=0, column=0, columnspan=2)

        self.quit_button = ttk.Button(root, text="Quitter", command=self.root.destroy)
        self.quit_button.grid(row=1, column=0, sticky='we')

        self.fire_button = ttk.Button(root, text="Feu !", command=self.fire)
        self.fire_button.grid(row=1, column=1, sticky='we')

        self.score_label = ttk.Label(root, text="Score: 0")
        self.score_label.grid(row=2, column=0, columnspan=2)

        self.target_center = (200, 200)
        self.target_radius = 150
        self.target_colors = ['red', 'red', 'red', 'red', 'red', 'ivory']
        self.draw_target()

        self.shots_fired = 0
        self.total_score = 0

        self.fire_button_state = True

        root.bind('f', self.fire_with_key)

    def draw_target(self):
        for i, color in enumerate(self.target_colors):
            radius = self.target_radius - i * 30
            self.canvas.create_oval(self.target_center[0] - radius, self.target_center[1] - radius,
                                    self.target_center[0] + radius, self.target_center[1] + radius,
                                    outline='red', fill=color)

        # Draw axes
        self.canvas.create_line(self.target_center[0], self.target_center[1] - self.target_radius,
                                self.target_center[0], self.target_center[1] + self.target_radius, fill='red')
        self.canvas.create_line(self.target_center[0] - self.target_radius, self.target_center[1],
                                self.target_center[0] + self.target_radius, self.target_center[1], fill='red')

        # Draw numbers
        for i in range(1, 7):
            angle = 30 * i
            x = self.target_center[0] + (self.target_radius + 20) * \
                (3 / 5) * (angle % 180 == 0)
            y = self.target_center[1] - (self.target_radius + 20) * \
                (3 / 5) * (angle % 180 == 90)
            self.canvas.create_text(x, y, text=str(i), fill='red')

    def fire(self):
        if self.fire_button_state:
            self.shots_fired += 1
            if self.shots_fired <= 5:
                x = random.randint(self.target_center[0] - self.target_radius,
                                    self.target_center[0] + self.target_radius)
                y = random.randint(self.target_center[1] - self.target_radius,
                                    self.target_center[1] + self.target_radius)
                self.canvas.create_oval(x - 5, y - 5, x + 5, y + 5, fill='black')
                score = self.calculate_score(x, y)
                self.total_score += score
                self.score_label.config(text="Score: {}".format(self.total_score))
                if self.shots_fired == 5:
                    self.fire_button_state = False
                    self.fire_button['state'] = 'disabled'

    def calculate_score(self, x, y):
        distance = ((x - self.target_center[0]) ** 2 + (y - self.target_center[1]) ** 2) ** 0.5
        if distance <= self.target_radius / 6:
            return 10
        elif distance <= 2 * self.target_radius / 6:
            return 8
        elif distance <= 3 * self.target_radius / 6:
            return 6
        elif distance <= 4 * self.target_radius / 6:
            return 4
        elif distance <= 5 * self.target_radius / 6:
            return 2
        else:
            return 0

    def fire_with_key(self, event):
        if self.fire_button_state:
            self.fire()

if __name__ == "__main__":
    root = tk.Tk()
    app = TargetPracticeApp(root)
    root.mainloop()